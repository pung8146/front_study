JavaScript

@변수는 어떤 정보에 이름을 붙여서 저장하고싶을때 사용
ex)name = "mike"; age=30; (위험한방식) 
++;세미클론은 끝났다는걸 표시 안써도되지만 쓰는걸 추천

@alert() 경고 팝업 

@console.log() 콘솔창에서 알려줌

@let : 변할 수 있는값은 let선언
    ex) let name = "Mike";
@const : 변하지 않는 값은 const 왠만하면 const로 하고 차후에 let로 변경   
 @@ 1. 변수는 문자와 숫자, $와 _만 사용 ex)let_ 1; let $ = 3
    2. 첫글자는 숫자가 될 수 없습니다. 
    3. 예약어는 사용할 수 없습니다.
    4. 가급적 상수는 대문자로 알려주세요 ex) const MAX_SIZE = 99;
    5. 변수명은 읽기 쉽고 이해할 수 있게 선언

@자료형 
    "" = '' 차이 별로없음 그래도 ""가좋음
    `` 은 문자열 내부 변수를 사용할때 사용하면 편리함
    ex)`나는 ${30+1}살 입니다`;
@숫자형
    숫자형은 사칙 연산이 가능 
    NaN = not a number 숫자작업할때 안나오는지 확인

@Boolean
    true; 는 / false; 거짓

@ null 과 undefined
 null 은 존재하지않는값 / undefined 값이 할당되지 않았음
 ** null 은 객체가 아니지만 버그와 아래버전 호환성유지해서 객채로표시됨

@typeof 연산자는 변수의 자료형 종류를 알아낼수있음
 보통 자기가 아닌 다른 동료개발자가 종류를 알아날때 쓰이기도함

## 대화상자 ##

@alert 알려줌

@prompt 입력 받음
프롬프트는 인수를 두개받을수있음 // 문자형으로 받는다
ex)prompt("예약일을 입력해주세요.", "2020-10-)
@confirm 확인 받음

============

String() => 문자형으로 변환

Number() => 숫자형으로 변환
// 안에 문자가있으면 NaN 이 되고 // treu , false 1과 0으로 나옴
Boolean() => 불린형으로 변환
// 숫자 0, 빈문자열 "" , null , NaN, undefined ==> false 외는 true

@@주의사항
외우기 :: Number(null) 0 , Number(undefined) NaN

Number(0) // false
Number("0") // true

Number("") // false
Number(' ') // true

============    

## 연산자 (Operators) ##
@나머지는 홀수와 짝수 구분 / 숫자체크 등 사용가능
@2 ** 3 = 8 거듭제곱
@ num++; 와 ++num; 의 값은 다르다 나중에 증가시키냐 , 먼저 증가시키냐 차이

===============

## 동등연산자 ##
const a = 1;
const b = "1";

console.log(a == b); = true
console.log(a === b); = false 타입값까지 비교 [일치연산자]

===========

## 조건문 ##

#if , else , else if
else는 if가 false 일때 실행이 됨
순서는 if , else if , else 순으로 작성

===========

## 논리 연산자 ##

|| (or)
여러개중 하나라도 true면 true
즉하나라도 true면 false
&& (and)
모든값이 true일때 true
즉 하나라도 false 일때 false
!(not)
true 면 false 
false 면 true 로 바꿔줌

#평가#는 or는 첫번째 true를 발견 하는 즉시 평가를멈춤
and는 false를 발견하면 멈춤
ex)좋은시력(90프로),운전면허소지(60프로),여군(7프로) 라면
여군중에 운전면허소지한 시력이좋은사람 ->이러면 여군에서 93프로 불필요데이터 거름
이것이 최적화 방법

문제1 이름 TOM 이거나 , 성인이면 통과

const name = "MIKE";
const age = "30"

if(name === "TOM" || age > 19 ){
    console.log("통과");
} else {
    console.log("탈락");
}

문제2. 나이를 입력받아 성인이 아니면 돌아가 표시

const age = prompt("나이 입력해주세요"); 

if(age > 19) {
    console.log("통과");
} else { 
    console.log("탈락");
}

내가쓴문제

const age = prompt('나이를 입력해주세요');
const isAdult = age > 19;

if(!isAge){
    console.log("돌아가"); 
}

문제3. 남자이고, 이름이 Mike 이거나 성인이면 통과

const gender = "F";
const name = "Jane"
const isAdult = true;

// if(gender === "M" && name === "Mike" || isAdult){
if(gender === "M" && (name === "Mike" || isAdult)){
    console.log("통과");
} else { 
    console.log("e돌아가");
}

============

## 반복문(for, while, do while) ##

1. for문
for(let i = 0; i < 10; i++) {
    // 반복할 코드 for문
}

2. while문
let = 0;

while(i<10){
    console.log(i);
    i++;
}

3.do..while문

let i = 0;

do{
    //코드
    i++;
}while(i<10)

while문 과 차이점 : 한번은 무조건 실행시킴!!

==================
